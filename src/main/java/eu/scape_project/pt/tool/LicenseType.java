//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vJAXB 2.1.10 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2012.08.23 at 10:04:24 AM MESZ 
//


package eu.scape_project.pt.tool;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for LicenseType.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="LicenseType">
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *     &lt;enumeration value="GPLv1"/>
 *     &lt;enumeration value="GPLv2"/>
 *     &lt;enumeration value="GPLv3"/>
 *     &lt;enumeration value="LGPLv2.1"/>
 *     &lt;enumeration value="LGPLv3"/>
 *     &lt;enumeration value="BSD-old"/>
 *     &lt;enumeration value="BSD-new"/>
 *     &lt;enumeration value="FreeBSD"/>
 *     &lt;enumeration value="Apache Licence 2.0"/>
 *     &lt;enumeration value="Other"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "LicenseType")
@XmlEnum
public enum LicenseType {

    @XmlEnumValue("GPLv1")
    GP_LV_1("GPLv1"),
    @XmlEnumValue("GPLv2")
    GP_LV_2("GPLv2"),
    @XmlEnumValue("GPLv3")
    GP_LV_3("GPLv3"),
    @XmlEnumValue("LGPLv2.1")
    LGP_LV_2_1("LGPLv2.1"),
    @XmlEnumValue("LGPLv3")
    LGP_LV_3("LGPLv3"),
    @XmlEnumValue("BSD-old")
    BSD_OLD("BSD-old"),
    @XmlEnumValue("BSD-new")
    BSD_NEW("BSD-new"),
    @XmlEnumValue("FreeBSD")
    FREE_BSD("FreeBSD"),
    @XmlEnumValue("Apache Licence 2.0")
    APACHE_LICENCE_2_0("Apache Licence 2.0"),
    @XmlEnumValue("Other")
    OTHER("Other");
    private final String value;

    LicenseType(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static LicenseType fromValue(String v) {
        for (LicenseType c: LicenseType.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
